{"version":3,"sources":["components/Button.js","components/PersonsList.js","components/PrintContacts.js","components/Notification.js","components/SearchBar.js","components/Personform.js","services/fetchpersons.js","App.js","index.js"],"names":["Button","value","handleDelete","className","onClick","Personslist","contact","ind","name","number","id","PrintContacts","contactname","cellPadding","cellSpacing","map","i","Notification","message","SearchBar","handlesearch","type","placeholder","onChange","autoComplete","Personform","handleNewNumber","newNumber","newName","handleNewName","addContact","onSubmit","baseUrl","fetchAll","getAll","axios","get","then","response","data","create","newname","post","delContact","delete","update","iddPerson","changedNumber","put","App","useState","persons","setPersons","searchName","setSearchName","setNewName","setNewNumber","errorMessage","setErrorMessage","filteredList","setfilteredList","useEffect","personsService","initialPersons","characterCapital","str","split","word","substring","toUpperCase","join","preventDoubleName","samename","find","toLowerCase","includes","trim","handleDeleteContact","event","btnValue","target","deletePerson","n","window","confirm","filter","filtered","row","preventDefault","result","updatePerson","date","Date","returnedPerson","pers","setTimeout","catch","error","length","returnedPersons","concat","e","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee8ba19b.chunk.js","sourcesContent":["import React from \"react\";\n\n// Button component\nconst Button = ({ value, handleDelete }) => {\n  return (\n    <>\n      <button className=\"delbtn\" value={value} onClick={handleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Personslist = ({ contact, handleDelete, ind }) => {\n  return (\n    <>\n      <tr>\n        <td>{ind + 1}</td>\n        <td>{contact.name}</td>\n        <td>{contact.number}</td>\n        <td>\n          <Button value={contact.id} handleDelete={handleDelete} />\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default Personslist;\n","import React from \"react\";\nimport Personslist from \"./PersonsList\";\n\nconst PrintContacts = ({ contactname, handleDelete }) => {\n  return (\n    <div>\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <td>Seq.</td>\n            <td>Name</td>\n            <td>Number</td>\n            <td>Delete</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contactname.map((contact, i) => (\n            <Personslist\n              key={i}\n              contact={contact}\n              ind={i}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PrintContacts;\n","import React from \"react\";\n\nconst Notification = ({ message }) => <p className=\"error\">{message}</p>;\n\nexport default Notification;\n","import React from \"react\";\n\nconst SearchBar = ({ handlesearch, value }) => {\n  return (\n    <>\n      <label>Search by name :</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        placeholder=\"search by name...\"\n        onChange={handlesearch}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Personform = ({\n  handleNewNumber,\n  newNumber,\n  newName,\n  handleNewName,\n  addContact,\n}) => {\n  return (\n    <form onSubmit={addContact}>\n      <h2>Add new contact</h2>\n      Name:{\" \"}\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={newName}\n        onChange={handleNewName}\n        placeholder=\"name...\"\n        autoComplete=\"off\"\n      />\n      Phone Number:{\" \"}\n      <input\n        autoComplete=\"off\"\n        placeholder=\"phone number...\"\n        value={newNumber}\n        onChange={handleNewNumber}\n      />\n      <button type=\"submit\">add</button>\n      <div className=\"printInput\">\n        <p>\n          {newName}\n          {newNumber}\n        </p>\n      </div>\n    </form>\n  );\n};\n\nexport default Personform;\n","import axios from \"axios\";\n// JSON server dev\n// const baseUrl = \"http://localhost:3001/persons/\";\n// backend fetch from express\n// const baseUrl = \"http://localhost:3001/api/persons\";\n\n// backend heroku express\n// const baseUrl = `https://quiet-dawn-80146.herokuapp.com/api/persons`;\n\n// production site\n// The web domain url is same as the backend as for frontend for this we use the relative url.\nconst baseUrl = `/api/persons`;\n\n// list all contact\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  return request.then((response) => response.data);\n};\n// add new contact\nconst create = (newname) => {\n  const request = axios.post(baseUrl, newname);\n  return request.then((response) => response.data);\n};\n// update\n\nconst update = (iddPerson, changedNumber) => {\n  const request = axios.put(`${baseUrl}/${iddPerson}`, changedNumber);\n  return request.then((response) => response.data);\n};\n// delete contact\nconst delContact = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n};\nconst fetchAll = {\n  getAll,\n  create,\n  delContact,\n  update,\n};\nexport default fetchAll;\n","import React, { useState, useEffect, Fragment } from \"react\";\n\nimport PrintContacts from \"./components/PrintContacts\";\nimport Notification from \"./components/Notification\";\nimport SearchBar from \"./components/SearchBar\";\nimport Personform from \"./components/Personform\";\nimport \"./App.css\";\nimport personsService from \"./services/fetchpersons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [filteredList, setfilteredList] = useState([]);\n\n  //  fetch data from json server\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  // addcontact\n  const addContact = (event) => {\n    event.preventDefault();\n\n    if (!newName || !newNumber) {\n      alert(`Please enter contact name and number.`);\n    } else {\n      let result = preventDoubleName(newName);\n\n      if (result) {\n        window.confirm(\n          `${result.name} is already added to phonebook. Do you want to change the number?`\n        );\n        {\n          const updatePerson = persons.find(\n            (n) => n.name.toLowerCase() === newName.toLowerCase()\n          );\n          const changedNumber = {\n            ...updatePerson,\n            number: newNumber,\n            date: new Date(),\n          };\n\n          personsService\n            .update(updatePerson.id, changedNumber)\n            .then((returnedPerson) => {\n              setPersons(\n                persons.map((pers) =>\n                  pers.id !== updatePerson.id ? pers : returnedPerson\n                )\n              );\n              setErrorMessage(\n                `${updatePerson.name}'s contact was successfully updated.`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            })\n            .catch((error) => {\n              setErrorMessage(\n                `ERROR!  ${updatePerson.name} has already been removed from server.`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            });\n        }\n      } else {\n        let lastPosition = persons[persons.length - 1];\n        let lastId = lastPosition.id;\n\n        const charcap = characterCapital(newName);\n\n        const newname = {\n          id: lastId + 1,\n          name: charcap.trim(),\n          date: new Date(),\n          number: newNumber,\n        };\n        personsService\n          .create(newname)\n          .then((returnedPersons) => {\n            setPersons(persons.concat(returnedPersons));\n            setErrorMessage(`Added '${returnedPersons.name}'`);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 3000);\n          })\n          .catch((e) => {\n            setErrorMessage(\n              `Error : Minimum length for name is (3) and minimum length for phone number is (8)`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  // First letter of the names set to capital letter\n  const characterCapital = (str) => {\n    return str\n      .split(/ /g)\n      .map(\n        (word) => `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n      )\n      .join(\" \");\n  };\n\n  // handlenewname and number\n  const handleNewName = (event) => setNewName(event.target.value);\n  const handleNewNumber = (event) => setNewNumber(event.target.value);\n\n  // Check if user entered the same name\n\n  const preventDoubleName = (samename) =>\n    persons.find(({ name }) =>\n      name.toLowerCase().includes(samename.toLowerCase().trim())\n    );\n  // SEARCH BAR TARGET VALUE\n  const handlesearch = (event) => {\n    setSearchName(event.target.value);\n\n    const filtered = persons.filter((row) =>\n      row.name.toLowerCase().includes(searchName.toLowerCase())\n    );\n    setfilteredList(filtered);\n  };\n\n  // handle delete\n\n  const handleDeleteContact = (event) => {\n    // const btnValue = parseFloat(event.target.value);\n    const btnValue = event.target.value;\n    const deletePerson = persons.find((n) => n.id === btnValue);\n\n    if (\n      window.confirm(`Do you want to delete ${deletePerson.name}'s contact?`)\n    ) {\n      if (searchName) {\n        setfilteredList(filteredList.filter((n) => n.id !== deletePerson.id));\n      } else {\n        personsService.delContact(deletePerson.id);\n        setPersons(persons.filter((n) => n.id !== deletePerson.id));\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <h2>Phonebook</h2>\n      <SearchBar value={searchName} handlesearch={handlesearch} />\n\n      <Personform\n        newName={newName}\n        newNumber={newNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        addContact={addContact}\n      />\n\n      {errorMessage && <Notification message={errorMessage} />}\n\n      {searchName ? (\n        <PrintContacts\n          contactname={filteredList}\n          handleDelete={handleDeleteContact}\n        />\n      ) : (\n        <PrintContacts\n          contactname={persons}\n          handleDelete={handleDeleteContact}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}