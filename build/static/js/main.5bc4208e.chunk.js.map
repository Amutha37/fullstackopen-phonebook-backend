{"version":3,"sources":["components/Button.js","components/PersonsList.js","components/PrintContacts.js","components/Notification.js","components/SearchBar.js","components/Personform.js","services/fetchpersons.js","App.js","index.js"],"names":["Button","value","handleDelete","className","onClick","Personslist","contact","ind","name","number","id","PrintContacts","contactname","cellPadding","cellSpacing","map","i","Notification","message","SearchBar","handlesearch","type","placeholder","onChange","autoComplete","Personform","handleNewNumber","newNumber","newName","handleNewName","addContact","onSubmit","baseUrl","axios","get","then","response","data","newname","post","delete","iddPerson","changedNumber","put","App","useState","persons","setPersons","searchName","setSearchName","setNewName","setNewNumber","errorMessage","setErrorMessage","filteredList","setfilteredList","useEffect","personsService","initialPersons","characterCapital","str","split","word","substring","toUpperCase","join","preventDoubleName","samename","find","toLowerCase","includes","trim","handleDeleteContact","event","btnValue","parseFloat","target","deletePerson","n","window","confirm","filter","filtered","row","preventDefault","result","updatePerson","date","Date","returnedPerson","pers","setTimeout","catch","error","length","returnedPersons","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bc4208e.chunk.js","sourcesContent":["import React from \"react\";\n\n// Button component\nconst Button = ({ value, handleDelete }) => {\n  return (\n    <>\n      <button className=\"delbtn\" value={value} onClick={handleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst Personslist = ({ contact, handleDelete, ind }) => {\n  return (\n    <>\n      <tr>\n        <td>{ind + 1}</td>\n        <td>{contact.name}</td>\n        <td>{contact.number}</td>\n        <td>\n          <Button value={contact.id} handleDelete={handleDelete} />\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default Personslist;\n","import React from \"react\";\nimport Personslist from \"./PersonsList\";\n\nconst PrintContacts = ({ contactname, handleDelete }) => {\n  return (\n    <div>\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <td>Seq.</td>\n            <td>Name</td>\n            <td>Number</td>\n            <td>Delete</td>\n          </tr>\n        </thead>\n        <tbody>\n          {contactname.map((contact, i) => (\n            <Personslist\n              key={i}\n              contact={contact}\n              ind={i}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PrintContacts;\n","import React from \"react\";\n\nconst Notification = ({ message }) => <p className=\"error\">{message}</p>;\n\nexport default Notification;\n","import React from \"react\";\n\nconst SearchBar = ({ handlesearch, value }) => {\n  return (\n    <>\n      <label>Search by name :</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        placeholder=\"search by name...\"\n        onChange={handlesearch}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Personform = ({\n  handleNewNumber,\n  newNumber,\n  newName,\n  handleNewName,\n  addContact,\n}) => {\n  return (\n    <form onSubmit={addContact}>\n      <h2>Add new contact</h2>\n      Name:{\" \"}\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={newName}\n        onChange={handleNewName}\n        placeholder=\"name...\"\n        autoComplete=\"off\"\n      />\n      Phone Number:{\" \"}\n      <input\n        autoComplete=\"off\"\n        placeholder=\"phone number...\"\n        value={newNumber}\n        onChange={handleNewNumber}\n      />\n      <button type=\"submit\">add</button>\n      <div className=\"printInput\">\n        <p>\n          {newName}\n          {newNumber}\n        </p>\n      </div>\n    </form>\n  );\n};\n\nexport default Personform;\n","import axios from \"axios\";\n// JSON server dev\n// const baseUrl = \"http://localhost:3001/persons/\";\n\n// backend fetch from express\n// const baseUrl = \"http://localhost:3001/api/persons\";\n\n// backend heroku express\n// const baseUrl = `https://quiet-dawn-80146.herokuapp.com/api/persons`;\n// production site\n\nconst baseUrl = `/api/persons`;\n\n// list all contact\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n\n  return request.then((response) => response.data);\n};\n// add new contact\nconst create = (newname) => {\n  const request = axios.post(baseUrl, newname);\n  return request.then((response) => response.data);\n};\n// update\n\nconst update = (iddPerson, changedNumber) => {\n  const request = axios.put(`${baseUrl}${iddPerson}`, changedNumber);\n  return request.then((response) => response.data);\n};\n// delete contact\nconst delContact = (id) => {\n  const request = axios.delete(`${baseUrl}${id}`);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, delContact, update };\n","import React, { useState, useEffect, Fragment } from \"react\";\n\nimport PrintContacts from \"./components/PrintContacts\";\nimport Notification from \"./components/Notification\";\nimport SearchBar from \"./components/SearchBar\";\nimport Personform from \"./components/Personform\";\nimport \"./App.css\";\nimport personsService from \"./services/fetchpersons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [filteredList, setfilteredList] = useState([]);\n\n  //  fetch data from json server\n  useEffect(() => {\n    personsService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  // addcontact\n  const addContact = (event) => {\n    event.preventDefault();\n\n    if (!newName) {\n      alert(`Please enter a contact name.`);\n    } else {\n      let result = preventDoubleName(newName);\n\n      if (result) {\n        window.confirm(\n          `${result.name} is already added to phonebook. Do you want to change the number?`\n        );\n        {\n          const updatePerson = persons.find(\n            (n) => n.name.toLowerCase() === newName.toLowerCase()\n          );\n          const changedNumber = {\n            ...updatePerson,\n            number: newNumber,\n            date: new Date(),\n          };\n\n          personsService\n            .update(updatePerson.id, changedNumber)\n            .then((returnedPerson) => {\n              setPersons(\n                persons.map((pers) =>\n                  pers.id !== updatePerson.id ? pers : returnedPerson\n                )\n              );\n              setErrorMessage(\n                `${updatePerson.name}'s contact was successfully updated.`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            })\n            .catch((error) => {\n              setErrorMessage(\n                `ERROR!  ${updatePerson.name} has already been removed from server.`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 5000);\n            });\n        }\n      } else {\n        let lastPosition = persons[persons.length - 1];\n        let lastId = lastPosition.id;\n\n        const charcap = characterCapital(newName);\n\n        const newname = {\n          id: lastId + 1,\n          name: charcap.trim(),\n          date: new Date(),\n          number: newNumber,\n        };\n        personsService.create(newname).then((returnedPersons) => {\n          setPersons(persons.concat(returnedPersons));\n          setErrorMessage(`Added '${returnedPersons.name}'`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 3000);\n        });\n      }\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  // First letter of the names set to capital letter\n  const characterCapital = (str) => {\n    return str\n      .split(/ /g)\n      .map(\n        (word) => `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n      )\n      .join(\" \");\n  };\n\n  // handlenewname and number\n  const handleNewName = (event) => setNewName(event.target.value);\n  const handleNewNumber = (event) => setNewNumber(event.target.value);\n\n  // Check if user entered the same name\n\n  const preventDoubleName = (samename) =>\n    persons.find(({ name }) =>\n      name.toLowerCase().includes(samename.toLowerCase().trim())\n    );\n  // SEARCH BAR TARGET VALUE\n  const handlesearch = (event) => {\n    setSearchName(event.target.value);\n\n    const filtered = persons.filter((row) =>\n      row.name.toLowerCase().includes(searchName.toLowerCase())\n    );\n    setfilteredList(filtered);\n  };\n\n  // handle delete\n\n  const handleDeleteContact = (event) => {\n    const btnValue = parseFloat(event.target.value);\n    const deletePerson = persons.find((n) => n.id === btnValue);\n\n    if (\n      window.confirm(`Do you want to delete ${deletePerson.name}'s contact?`)\n    ) {\n      if (searchName) {\n        setfilteredList(filteredList.filter((n) => n.id !== deletePerson.id));\n      } else {\n        personsService.delContact(deletePerson.id);\n        setPersons(persons.filter((n) => n.id !== deletePerson.id));\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <h2>Phonebook</h2>\n      <SearchBar value={searchName} handlesearch={handlesearch} />\n\n      <Personform\n        newName={newName}\n        newNumber={newNumber}\n        handleNewName={handleNewName}\n        handleNewNumber={handleNewNumber}\n        addContact={addContact}\n      />\n\n      {errorMessage && <Notification message={errorMessage} />}\n\n      {searchName ? (\n        <PrintContacts\n          contactname={filteredList}\n          handleDelete={handleDeleteContact}\n        />\n      ) : (\n        <PrintContacts\n          contactname={persons}\n          handleDelete={handleDeleteContact}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}